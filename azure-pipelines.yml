# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none
variables:
  buildConfiguration: 'Release'
pool:
  vmImage: 'ubuntu-latest'


stages:
  - stage: Build
    displayName: Build 
    jobs:
      - job: Build
        pool: 
          vmImage: ubuntu-latest
        steps:
        - task: DotNetCoreCLI@2
          inputs:
            command: 'restore'
            projects: '*/*.csproj'
            feedsToUse: 'select'
          displayName: 'Restore Nuget Packages'
        - task: DotNetCoreCLI@2
          inputs:
            command: 'build'
            projects: '*/*.csproj'
            arguments: '--no-restore'
        - task: DotNetCoreCLI@2
          inputs:
            command: 'test'
            projects: '*/*.csproj'
            arguments: '--no-restore'
          displayName: 'Unit Testing'
        - task: DotNetCoreCLI@2
          inputs:
            command: 'publish'
            publishWebProjects: false
            projects: '*/Miniblog.Core.csproj'
            arguments: '-o $(Build.ArtifactStagingDirectory)'
            zipAfterPublish: false
          displayName: 'Publish-Package'
        - task: PublishBuildArtifacts@1
          displayName: Publish Artifacts
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: myownapp
  - stage: Deployment
    displayName: Dev-Env
    jobs:
      - job: Deploy
        pool:
          vmImage: 'windows-latest'
        steps:
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'myownapp'
              downloadPath: '$(Build.ArtifactStagingDirectory)'
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: AzureRM
              azureSubscription: 'myown-svc'
              appType: webApp
              WebAppName: 'myownsampleproject'
              packageForLinux: '$(Build.ArtifactStagingDirectory)/**/src'